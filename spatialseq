library(Seurat)
library(ggplot2)
library(patchwork)
library(dplyr)
load_Seurat <- function(data_dir) {
  list.files(data_dir) # Should show filtered_feature_bc_matrix.h5
  sample <- Load10X_Spatial(data.dir = data_dir, filename = "./filtered_feature_bc_matrix.h5")
  return(sample)
}

run_PCA <- function(seurat) {
  #acne <- FindVariableFeatures(seurat, assay = "Spatial", selection.method = "vst", nfeatures = 3000) 
  #acne <- ScaleData(acne)
  #acne <- SCTransform(seurat, ncells = 3000, verbose = TRUE)
  acne <- SCTransform(seurat, assay = "Spatial", ncells = 3000, verbose = TRUE)
  acne <- RunPCA(acne, verbose = FALSE)
  acne <- FindNeighbors(acne, reduction = "pca", dims = 1:30)
  acne <- FindClusters(acne, verbose = FALSE)
  acne <- RunUMAP(acne, reduction = "pca", dims = 1:30)
  return(acne)
}

cluster_plot <- function(seurat) {
  acne <- run_PCA(seurat)
  p1 <- DimPlot(acne, reduction = "umap", pt.size = 1.3, label = TRUE)
  p2 <- SpatialDimPlot(acne, label = TRUE, label.size = 3, pt.size.factor = 2.5)
  p1 + p2
  return(p1 + p2)
}

get_csv <- function(seurat, name) {
  acne <- run_PCA(seurat)
  markers <- FindAllMarkers(acne, assay = "Spatial")
  write.csv(markers, name)
}

sample_A <- load_Seurat("/Users/charlotte/Desktop/Modlin_Lab/Spatial_Cell/Acne/Sample_A")
#save(sample_A, file = "sample_A.RData")
sample_A = run_PCA(sample_A)
get_csv(sample_A, "marker_A.csv")

