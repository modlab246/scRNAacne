#Fig. 3c, Scatterpie
library(scatterpie)
load("./acne_singCell.Rdata")

predict_assay <- function(sample) {
  #warnplot1 = DimPlot(single_cell_object, group.by="celltype", label=TRUE)
  anchors = FindTransferAnchors(reference=single_cell_object, query=sample, normalization.method="SCT")
  predictions_assay = TransferData(anchorset=anchors, refdata=single_cell_object$celltype, prediction.assay=TRUE,
                                 weight.reduction=sample[["pca"]], dim=1:30)
  sample[["predictions"]] = predictions_assay
  return(sample)
}

sample_A = predict_assay(sample_A)

# Make scatter pie
celltypes = sort(rownames(GetAssayData(sample_A, assay="predictions")))
celltypes = setdiff(celltypes, "max")
t(GetAssayData(sample_A, assay="predictions"))
z1 = t(GetAssayData(sample_A, assay="predictions"))[,celltypes]
coords = sample_A@images$slice1@coordinates
coords[,c(4)] = -coords[,c(4)]
z1 = cbind(z1, coords)

ggplot() + geom_scatterpie(data=z1, aes(x=imagecol, y=imagerow), pie_scale=0.58, cols=celltypes[1:length(celltypes)], color = NA) +
  theme_classic() + labs(x=NULL, y=NULL, fill=NULL) + coord_equal()

genes = c("TREM2","APOE","SPP1","GPNMB","CTSB","CD68","LGALS3","TYROBP","LPL")
sample_A = AddModuleScore(sample_A, assay = "SCT", features=list(genes), name="TREM2_Score")
genes = c("SQLE")
sample_A = AddModuleScore(sample_A, assay = "SCT", features=list(genes), name="SQLE")
coords = sample_A@images$slice1@coordinates
coords[,c(4)] = -coords[,c(4)]
coords = as.matrix(coords[,c(4,5)])
colnames(coords) = paste("coords", 1:2, sep="_")
sample_A[["coords_"]] = CreateDimReducObject(embeddings = coords, key = "coords_", assay = DefaultAssay(sample_A))
plots <- FeaturePlot(sample_A, features=c("TREM2_Score1","SQLE1"), blend=TRUE, reduction="coords_", pt.size = 2.8, cols=c("grey90","red","green")) & theme(text = element_text(face = "bold", size = 25), axis.text.x=element_text(size=20), axis.text.y=element_text(size=20))
plots[[3]] + NoAxes() + plots[[4]] + NoLegend()
